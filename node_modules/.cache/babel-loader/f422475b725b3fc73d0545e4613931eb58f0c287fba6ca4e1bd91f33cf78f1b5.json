{"ast":null,"code":"var _s = $RefreshSig$();\n// Signup.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from './UserContext'; // Import the useUser hook\n\nconst json = await response.json();\nconst Signup = props => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    cpassword: \"\"\n  });\n  const navigate = useNavigate();\n  const {\n    setUser\n  } = useUser(); // Get the setUser function from UserContext\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // ... (Your registration logic here)\n    if (json.success) {\n      localStorage.setItem('token', json.authtoken);\n      setUser(json.user); // Set the user after successful registration\n      navigate('/');\n      props.showAlert(\"Account created successfully\", \"success\");\n    } else {\n      props.showAlert(\"Invalid Credentials\", \"danger\");\n    }\n  };\n\n  // ... (Rest of your component)\n};\n_s(Signup, \"WJN4BDPyVBdwgHB4+O75lqhOLVM=\", false, function () {\n  return [useNavigate, useUser];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","useUser","json","response","Signup","props","_s","credentials","setCredentials","name","email","password","cpassword","navigate","setUser","handleSubmit","e","preventDefault","success","localStorage","setItem","authtoken","user","showAlert","_c","$RefreshReg$"],"sources":["/Users/tarunkumar/Documents/iNoteBOOK/src/components/Signup.js"],"sourcesContent":["// Signup.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from './UserContext'; // Import the useUser hook\n\nconst json = await response.json();\n\nconst Signup = (props) => {\n  const [credentials, setCredentials] = useState({ name: \"\", email: \"\", password: \"\", cpassword: \"\" });\n  const navigate = useNavigate();\n  const { setUser } = useUser(); // Get the setUser function from UserContext\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // ... (Your registration logic here)\n    if (json.success) {\n      localStorage.setItem('token', json.authtoken);\n      setUser(json.user); // Set the user after successful registration\n      navigate('/');\n      props.showAlert(\"Account created successfully\", \"success\");\n    } else {\n      props.showAlert(\"Invalid Credentials\", \"danger\");\n    }\n  }\n\n  // ... (Rest of your component)\n};\nexport default Signup;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,eAAe,CAAC,CAAC;;AAEzC,MAAMC,IAAI,GAAG,MAAMC,QAAQ,CAACD,IAAI,CAAC,CAAC;AAElC,MAAME,MAAM,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC;IAAEU,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAG,CAAC,CAAC;EACpG,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEc;EAAQ,CAAC,GAAGb,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE/B,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,IAAIf,IAAI,CAACgB,OAAO,EAAE;MAChBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAElB,IAAI,CAACmB,SAAS,CAAC;MAC7CP,OAAO,CAACZ,IAAI,CAACoB,IAAI,CAAC,CAAC,CAAC;MACpBT,QAAQ,CAAC,GAAG,CAAC;MACbR,KAAK,CAACkB,SAAS,CAAC,8BAA8B,EAAE,SAAS,CAAC;IAC5D,CAAC,MAAM;MACLlB,KAAK,CAACkB,SAAS,CAAC,qBAAqB,EAAE,QAAQ,CAAC;IAClD;EACF,CAAC;;EAED;AACF,CAAC;AAACjB,EAAA,CAnBIF,MAAM;EAAA,QAEOJ,WAAW,EACRC,OAAO;AAAA;AAAAuB,EAAA,GAHvBpB,MAAM;AAoBZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}