{"ast":null,"code":"/*!\nCopyright (c) 2016 Dominik Moritz\n\nThis file is part of the leaflet locate control. It is licensed under the MIT license.\nYou can find the project at: https://github.com/domoritz/leaflet-locatecontrol\n*/\n(function (factory, window) {\n  // see https://github.com/Leaflet/Leaflet/blob/master/PLUGIN-GUIDE.md#module-loaders\n  // for details on how to structure a leaflet plugin.\n\n  // define an AMD module that relies on 'leaflet'\n  if (typeof define === \"function\" && define.amd) {\n    define([\"leaflet\"], factory);\n\n    // define a Common JS module that relies on 'leaflet'\n  } else if (typeof exports === \"object\") {\n    if (typeof window !== \"undefined\" && window.L) {\n      module.exports = factory(L);\n    } else {\n      module.exports = factory(require(\"leaflet\"));\n    }\n  }\n\n  // attach your plugin to the global 'L' variable\n  if (typeof window !== \"undefined\" && window.L) {\n    window.L.Control.Locate = factory(L);\n  }\n})(function (L) {\n  var LDomUtilApplyClassesMethod = function LDomUtilApplyClassesMethod(method, element, classNames) {\n    classNames = classNames.split(\" \");\n    classNames.forEach(function (className) {\n      L.DomUtil[method].call(this, element, className);\n    });\n  };\n  var addClasses = function addClasses(el, names) {\n    return LDomUtilApplyClassesMethod(\"addClass\", el, names);\n  };\n  var removeClasses = function removeClasses(el, names) {\n    return LDomUtilApplyClassesMethod(\"removeClass\", el, names);\n  };\n\n  /**\n   * Compatible with L.Circle but a true marker instead of a path\n   */\n  var LocationMarker = L.Marker.extend({\n    initialize: function initialize(latlng, options) {\n      L.Util.setOptions(this, options);\n      this._latlng = latlng;\n      this.createIcon();\n    },\n    /**\n     * Create a styled circle location marker\n     */\n    createIcon: function createIcon() {\n      var opt = this.options;\n      var style = \"\";\n      if (opt.color !== undefined) {\n        style += \"stroke:\".concat(opt.color, \";\");\n      }\n      if (opt.weight !== undefined) {\n        style += \"stroke-width:\".concat(opt.weight, \";\");\n      }\n      if (opt.fillColor !== undefined) {\n        style += \"fill:\".concat(opt.fillColor, \";\");\n      }\n      if (opt.fillOpacity !== undefined) {\n        style += \"fill-opacity:\".concat(opt.fillOpacity, \";\");\n      }\n      if (opt.opacity !== undefined) {\n        style += \"opacity:\".concat(opt.opacity, \";\");\n      }\n      var icon = this._getIconSVG(opt, style);\n      this._locationIcon = L.divIcon({\n        className: icon.className,\n        html: icon.svg,\n        iconSize: [icon.w, icon.h]\n      });\n      this.setIcon(this._locationIcon);\n    },\n    /**\n     * Return the raw svg for the shape\n     *\n     * Split so can be easily overridden\n     */\n    _getIconSVG: function _getIconSVG(options, style) {\n      var r = options.radius;\n      var w = options.weight;\n      var s = r + w;\n      var s2 = s * 2;\n      var svg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\".concat(s2, \"\\\" height=\\\"\").concat(s2, \"\\\" version=\\\"1.1\\\" viewBox=\\\"-\").concat(s, \" -\").concat(s, \" \").concat(s2, \" \").concat(s2, \"\\\">\") + '<circle r=\"' + r + '\" style=\"' + style + '\" />' + \"</svg>\";\n      return {\n        className: \"leaflet-control-locate-location\",\n        svg: svg,\n        w: s2,\n        h: s2\n      };\n    },\n    setStyle: function setStyle(style) {\n      L.Util.setOptions(this, style);\n      this.createIcon();\n    }\n  });\n  var CompassMarker = LocationMarker.extend({\n    initialize: function initialize(latlng, heading, options) {\n      L.Util.setOptions(this, options);\n      this._latlng = latlng;\n      this._heading = heading;\n      this.createIcon();\n    },\n    setHeading: function setHeading(heading) {\n      this._heading = heading;\n    },\n    /**\n     * Create a styled arrow compass marker\n     */\n    _getIconSVG: function _getIconSVG(options, style) {\n      var r = options.radius;\n      var w = options.width + options.weight;\n      var h = (r + options.depth + options.weight) * 2;\n      var path = \"M0,0 l\".concat(options.width / 2, \",\").concat(options.depth, \" l-\").concat(w, \",0 z\");\n      var svgstyle = \"transform: rotate(\".concat(this._heading, \"deg)\");\n      var svg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"\".concat(w, \"\\\" height=\\\"\").concat(h, \"\\\" version=\\\"1.1\\\" viewBox=\\\"-\").concat(w / 2, \" 0 \").concat(w, \" \").concat(h, \"\\\" style=\\\"\").concat(svgstyle, \"\\\">\") + '<path d=\"' + path + '\" style=\"' + style + '\" />' + \"</svg>\";\n      return {\n        className: \"leaflet-control-locate-heading\",\n        svg: svg,\n        w: w,\n        h: h\n      };\n    }\n  });\n  var LocateControl = L.Control.extend({\n    options: {\n      /** Position of the control */\n      position: \"topleft\",\n      /** The layer that the user's location should be drawn on. By default creates a new layer. */\n      layer: undefined,\n      /**\n       * Automatically sets the map view (zoom and pan) to the user's location as it updates.\n       * While the map is following the user's location, the control is in the `following` state,\n       * which changes the style of the control and the circle marker.\n       *\n       * Possible values:\n       *  - false: never updates the map view when location changes.\n       *  - 'once': set the view when the location is first determined\n       *  - 'always': always updates the map view when location changes.\n       *              The map view follows the user's location.\n       *  - 'untilPan': like 'always', except stops updating the\n       *                view if the user has manually panned the map.\n       *                The map view follows the user's location until she pans.\n       *  - 'untilPanOrZoom': (default) like 'always', except stops updating the\n       *                view if the user has manually panned the map.\n       *                The map view follows the user's location until she pans.\n       */\n      setView: \"untilPanOrZoom\",\n      /** Keep the current map zoom level when setting the view and only pan. */\n      keepCurrentZoomLevel: false,\n      /** After activating the plugin by clicking on the icon, zoom to the selected zoom level, even when keepCurrentZoomLevel is true. Set to 'false' to disable this feature. */\n      initialZoomLevel: false,\n      /**\n       * This callback can be used to override the viewport tracking\n       * This function should return a LatLngBounds object.\n       *\n       * For example to extend the viewport to ensure that a particular LatLng is visible:\n       *\n       * getLocationBounds: function(locationEvent) {\n       *    return locationEvent.bounds.extend([-33.873085, 151.219273]);\n       * },\n       */\n      getLocationBounds: function getLocationBounds(locationEvent) {\n        return locationEvent.bounds;\n      },\n      /** Smooth pan and zoom to the location of the marker. Only works in Leaflet 1.0+. */\n      flyTo: false,\n      /**\n       * The user location can be inside and outside the current view when the user clicks on the\n       * control that is already active. Both cases can be configures separately.\n       * Possible values are:\n       *  - 'setView': zoom and pan to the current location\n       *  - 'stop': stop locating and remove the location marker\n       */\n      clickBehavior: {\n        /** What should happen if the user clicks on the control while the location is within the current view. */\n        inView: \"stop\",\n        /** What should happen if the user clicks on the control while the location is outside the current view. */\n        outOfView: \"setView\",\n        /**\n         * What should happen if the user clicks on the control while the location is within the current view\n         * and we could be following but are not. Defaults to a special value which inherits from 'inView';\n         */\n        inViewNotFollowing: \"inView\"\n      },\n      /**\n       * If set, save the map bounds just before centering to the user's\n       * location. When control is disabled, set the view back to the\n       * bounds that were saved.\n       */\n      returnToPrevBounds: false,\n      /**\n       * Keep a cache of the location after the user deactivates the control. If set to false, the user has to wait\n       * until the locate API returns a new location before they see where they are again.\n       */\n      cacheLocation: true,\n      /** If set, a circle that shows the location accuracy is drawn. */\n      drawCircle: true,\n      /** If set, the marker at the users' location is drawn. */\n      drawMarker: true,\n      /** If set and supported then show the compass heading */\n      showCompass: true,\n      /** The class to be used to create the marker. For example L.CircleMarker or L.Marker */\n      markerClass: LocationMarker,\n      /** The class us be used to create the compass bearing arrow */\n      compassClass: CompassMarker,\n      /** Accuracy circle style properties. NOTE these styles should match the css animations styles */\n      circleStyle: {\n        className: \"leaflet-control-locate-circle\",\n        color: \"#136AEC\",\n        fillColor: \"#136AEC\",\n        fillOpacity: 0.15,\n        weight: 0\n      },\n      /** Inner marker style properties. Only works if your marker class supports `setStyle`. */\n      markerStyle: {\n        className: \"leaflet-control-locate-marker\",\n        color: \"#fff\",\n        fillColor: \"#2A93EE\",\n        fillOpacity: 1,\n        weight: 3,\n        opacity: 1,\n        radius: 9\n      },\n      /** Compass */\n      compassStyle: {\n        fillColor: \"#2A93EE\",\n        fillOpacity: 1,\n        weight: 0,\n        color: \"#fff\",\n        opacity: 1,\n        radius: 9,\n        // How far is the arrow is from the center of of the marker\n        width: 9,\n        // Width of the arrow\n        depth: 6 // Length of the arrow\n      },\n\n      /**\n       * Changes to accuracy circle and inner marker while following.\n       * It is only necessary to provide the properties that should change.\n       */\n      followCircleStyle: {},\n      followMarkerStyle: {\n        // color: '#FFA500',\n        // fillColor: '#FFB000'\n      },\n      followCompassStyle: {},\n      /** The CSS class for the icon. For example fa-location-arrow or fa-map-marker */\n      icon: \"leaflet-control-locate-location-arrow\",\n      iconLoading: \"leaflet-control-locate-spinner\",\n      /** The element to be created for icons. For example span or i */\n      iconElementTag: \"span\",\n      /** The element to be created for the text. For example small or span */\n      textElementTag: \"small\",\n      /** Padding around the accuracy circle. */\n      circlePadding: [0, 0],\n      /** Use metric units. */\n      metric: true,\n      /**\n       * This callback can be used in case you would like to override button creation behavior.\n       * This is useful for DOM manipulation frameworks such as angular etc.\n       * This function should return an object with HtmlElement for the button (link property) and the icon (icon property).\n       */\n      createButtonCallback: function createButtonCallback(container, options) {\n        var link = L.DomUtil.create(\"a\", \"leaflet-bar-part leaflet-bar-part-single\", container);\n        link.title = options.strings.title;\n        link.href = \"#\";\n        link.setAttribute(\"role\", \"button\");\n        var icon = L.DomUtil.create(options.iconElementTag, options.icon, link);\n        if (options.strings.text !== undefined) {\n          var text = L.DomUtil.create(options.textElementTag, \"leaflet-locate-text\", link);\n          text.textContent = options.strings.text;\n          link.classList.add(\"leaflet-locate-text-active\");\n          link.parentNode.style.display = \"flex\";\n          if (options.icon.length > 0) {\n            icon.classList.add(\"leaflet-locate-icon\");\n          }\n        }\n        return {\n          link: link,\n          icon: icon\n        };\n      },\n      /** This event is called in case of any location error that is not a time out error. */onLocationError: function onLocationError(err, control) {\n        alert(err.message);\n      },\n      /**\n       * This event is called when the user's location is outside the bounds set on the map.\n       * The event is called repeatedly when the location changes.\n       */\n      onLocationOutsideMapBounds: function onLocationOutsideMapBounds(control) {\n        control.stop();\n        alert(control.options.strings.outsideMapBoundsMsg);\n      },\n      /** Display a pop-up when the user click on the inner marker. */\n      showPopup: true,\n      strings: {\n        title: \"Show me where I am\",\n        metersUnit: \"meters\",\n        feetUnit: \"feet\",\n        popup: \"You are within {distance} {unit} from this point\",\n        outsideMapBoundsMsg: \"You seem located outside the boundaries of the map\"\n      },\n      /** The default options passed to leaflets locate method. */\n      locateOptions: {\n        maxZoom: Infinity,\n        watch: true,\n        // if you overwrite this, visualization cannot be updated\n        setView: false // have to set this to false because we have to\n        // do setView manually\n      }\n    },\n    initialize: function initialize(options) {\n      // set default options if nothing is set (merge one step deep)\n      for (var i in options) {\n        if (typeof this.options[i] === \"object\") {\n          L.extend(this.options[i], options[i]);\n        } else {\n          this.options[i] = options[i];\n        }\n      }\n\n      // extend the follow marker style and circle from the normal style\n      this.options.followMarkerStyle = L.extend({}, this.options.markerStyle, this.options.followMarkerStyle);\n      this.options.followCircleStyle = L.extend({}, this.options.circleStyle, this.options.followCircleStyle);\n      this.options.followCompassStyle = L.extend({}, this.options.compassStyle, this.options.followCompassStyle);\n    },\n    /**\n     * Add control to map. Returns the container for the control.\n     */\n    onAdd: function onAdd(map) {\n      var container = L.DomUtil.create(\"div\", \"leaflet-control-locate leaflet-bar leaflet-control\");\n      this._container = container;\n      this._map = map;\n      this._layer = this.options.layer || new L.LayerGroup();\n      this._layer.addTo(map);\n      this._event = undefined;\n      this._compassHeading = null;\n      this._prevBounds = null;\n      var linkAndIcon = this.options.createButtonCallback(container, this.options);\n      this._link = linkAndIcon.link;\n      this._icon = linkAndIcon.icon;\n      L.DomEvent.on(this._link, \"click\", function (ev) {\n        L.DomEvent.stopPropagation(ev);\n        L.DomEvent.preventDefault(ev);\n        this._onClick();\n      }, this).on(this._link, \"dblclick\", L.DomEvent.stopPropagation);\n      this._resetVariables();\n      this._map.on(\"unload\", this._unload, this);\n      return container;\n    },\n    /**\n     * This method is called when the user clicks on the control.\n     */\n    _onClick: function _onClick() {\n      this._justClicked = true;\n      var wasFollowing = this._isFollowing();\n      this._userPanned = false;\n      this._userZoomed = false;\n      if (this._active && !this._event) {\n        // click while requesting\n        this.stop();\n      } else if (this._active) {\n        var behaviors = this.options.clickBehavior;\n        var behavior = behaviors.outOfView;\n        if (this._map.getBounds().contains(this._event.latlng)) {\n          behavior = wasFollowing ? behaviors.inView : behaviors.inViewNotFollowing;\n        }\n\n        // Allow inheriting from another behavior\n        if (behaviors[behavior]) {\n          behavior = behaviors[behavior];\n        }\n        switch (behavior) {\n          case \"setView\":\n            this.setView();\n            break;\n          case \"stop\":\n            this.stop();\n            if (this.options.returnToPrevBounds) {\n              var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n              f.bind(this._map)(this._prevBounds);\n            }\n            break;\n        }\n      } else {\n        if (this.options.returnToPrevBounds) {\n          this._prevBounds = this._map.getBounds();\n        }\n        this.start();\n      }\n      this._updateContainerStyle();\n    },\n    /**\n     * Starts the plugin:\n     * - activates the engine\n     * - draws the marker (if coordinates available)\n     */\n    start: function start() {\n      this._activate();\n      if (this._event) {\n        this._drawMarker(this._map);\n\n        // if we already have a location but the user clicked on the control\n        if (this.options.setView) {\n          this.setView();\n        }\n      }\n      this._updateContainerStyle();\n    },\n    /**\n     * Stops the plugin:\n     * - deactivates the engine\n     * - reinitializes the button\n     * - removes the marker\n     */\n    stop: function stop() {\n      this._deactivate();\n      this._cleanClasses();\n      this._resetVariables();\n      this._removeMarker();\n    },\n    /**\n     * Keep the control active but stop following the location\n     */\n    stopFollowing: function stopFollowing() {\n      this._userPanned = true;\n      this._updateContainerStyle();\n      this._drawMarker();\n    },\n    /**\n     * This method launches the location engine.\n     * It is called before the marker is updated,\n     * event if it does not mean that the event will be ready.\n     *\n     * Override it if you want to add more functionalities.\n     * It should set the this._active to true and do nothing if\n     * this._active is true.\n     */\n    _activate: function _activate() {\n      if (this._active || !this._map) {\n        return;\n      }\n      this._map.locate(this.options.locateOptions);\n      this._map.fire(\"locateactivate\", this);\n      this._active = true;\n\n      // bind event listeners\n      this._map.on(\"locationfound\", this._onLocationFound, this);\n      this._map.on(\"locationerror\", this._onLocationError, this);\n      this._map.on(\"dragstart\", this._onDrag, this);\n      this._map.on(\"zoomstart\", this._onZoom, this);\n      this._map.on(\"zoomend\", this._onZoomEnd, this);\n      if (this.options.showCompass) {\n        var oriAbs = (\"ondeviceorientationabsolute\" in window);\n        if (oriAbs || \"ondeviceorientation\" in window) {\n          var _this = this;\n          var deviceorientation = function deviceorientation() {\n            L.DomEvent.on(window, oriAbs ? \"deviceorientationabsolute\" : \"deviceorientation\", _this._onDeviceOrientation, _this);\n          };\n          if (DeviceOrientationEvent && typeof DeviceOrientationEvent.requestPermission === \"function\") {\n            DeviceOrientationEvent.requestPermission().then(function (permissionState) {\n              if (permissionState === \"granted\") {\n                deviceorientation();\n              }\n            });\n          } else {\n            deviceorientation();\n          }\n        }\n      }\n    },\n    /**\n     * Called to stop the location engine.\n     *\n     * Override it to shutdown any functionalities you added on start.\n     */\n    _deactivate: function _deactivate() {\n      if (!this._active || !this._map) {\n        return;\n      }\n      this._map.stopLocate();\n      this._map.fire(\"locatedeactivate\", this);\n      this._active = false;\n      if (!this.options.cacheLocation) {\n        this._event = undefined;\n      }\n\n      // unbind event listeners\n      this._map.off(\"locationfound\", this._onLocationFound, this);\n      this._map.off(\"locationerror\", this._onLocationError, this);\n      this._map.off(\"dragstart\", this._onDrag, this);\n      this._map.off(\"zoomstart\", this._onZoom, this);\n      this._map.off(\"zoomend\", this._onZoomEnd, this);\n      if (this.options.showCompass) {\n        this._compassHeading = null;\n        if (\"ondeviceorientationabsolute\" in window) {\n          L.DomEvent.off(window, \"deviceorientationabsolute\", this._onDeviceOrientation, this);\n        } else if (\"ondeviceorientation\" in window) {\n          L.DomEvent.off(window, \"deviceorientation\", this._onDeviceOrientation, this);\n        }\n      }\n    },\n    /**\n     * Zoom (unless we should keep the zoom level) and an to the current view.\n     */\n    setView: function setView() {\n      this._drawMarker();\n      if (this._isOutsideMapBounds()) {\n        this._event = undefined; // clear the current location so we can get back into the bounds\n        this.options.onLocationOutsideMapBounds(this);\n      } else {\n        if (this._justClicked && this.options.initialZoomLevel !== false) {\n          var f = this.options.flyTo ? this._map.flyTo : this._map.setView;\n          f.bind(this._map)([this._event.latitude, this._event.longitude], this.options.initialZoomLevel);\n        } else if (this.options.keepCurrentZoomLevel) {\n          var f = this.options.flyTo ? this._map.flyTo : this._map.panTo;\n          f.bind(this._map)([this._event.latitude, this._event.longitude]);\n        } else {\n          var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n          // Ignore zoom events while setting the viewport as these would stop following\n          this._ignoreEvent = true;\n          f.bind(this._map)(this.options.getLocationBounds(this._event), {\n            padding: this.options.circlePadding,\n            maxZoom: this.options.initialZoomLevel || this.options.locateOptions.maxZoom\n          });\n          L.Util.requestAnimFrame(function () {\n            // Wait until after the next animFrame because the flyTo can be async\n            this._ignoreEvent = false;\n          }, this);\n        }\n      }\n    },\n    /**\n     *\n     */\n    _drawCompass: function _drawCompass() {\n      if (!this._event) {\n        return;\n      }\n      var latlng = this._event.latlng;\n      if (this.options.showCompass && latlng && this._compassHeading !== null) {\n        var cStyle = this._isFollowing() ? this.options.followCompassStyle : this.options.compassStyle;\n        if (!this._compass) {\n          this._compass = new this.options.compassClass(latlng, this._compassHeading, cStyle).addTo(this._layer);\n        } else {\n          this._compass.setLatLng(latlng);\n          this._compass.setHeading(this._compassHeading);\n          // If the compassClass can be updated with setStyle, update it.\n          if (this._compass.setStyle) {\n            this._compass.setStyle(cStyle);\n          }\n        }\n        //\n      }\n\n      if (this._compass && (!this.options.showCompass || this._compassHeading === null)) {\n        this._compass.removeFrom(this._layer);\n        this._compass = null;\n      }\n    },\n    /**\n     * Draw the marker and accuracy circle on the map.\n     *\n     * Uses the event retrieved from onLocationFound from the map.\n     */\n    _drawMarker: function _drawMarker() {\n      if (this._event.accuracy === undefined) {\n        this._event.accuracy = 0;\n      }\n      var radius = this._event.accuracy;\n      var latlng = this._event.latlng;\n\n      // circle with the radius of the location's accuracy\n      if (this.options.drawCircle) {\n        var style = this._isFollowing() ? this.options.followCircleStyle : this.options.circleStyle;\n        if (!this._circle) {\n          this._circle = L.circle(latlng, radius, style).addTo(this._layer);\n        } else {\n          this._circle.setLatLng(latlng).setRadius(radius).setStyle(style);\n        }\n      }\n      var distance;\n      var unit;\n      if (this.options.metric) {\n        distance = radius.toFixed(0);\n        unit = this.options.strings.metersUnit;\n      } else {\n        distance = (radius * 3.2808399).toFixed(0);\n        unit = this.options.strings.feetUnit;\n      }\n\n      // small inner marker\n      if (this.options.drawMarker) {\n        var mStyle = this._isFollowing() ? this.options.followMarkerStyle : this.options.markerStyle;\n        if (!this._marker) {\n          this._marker = new this.options.markerClass(latlng, mStyle).addTo(this._layer);\n        } else {\n          this._marker.setLatLng(latlng);\n          // If the markerClass can be updated with setStyle, update it.\n          if (this._marker.setStyle) {\n            this._marker.setStyle(mStyle);\n          }\n        }\n      }\n      this._drawCompass();\n      var t = this.options.strings.popup;\n      function getPopupText() {\n        if (typeof t === \"string\") {\n          return L.Util.template(t, {\n            distance: distance,\n            unit: unit\n          });\n        } else if (typeof t === \"function\") {\n          return t({\n            distance: distance,\n            unit: unit\n          });\n        } else {\n          return t;\n        }\n      }\n      if (this.options.showPopup && t && this._marker) {\n        this._marker.bindPopup(getPopupText())._popup.setLatLng(latlng);\n      }\n      if (this.options.showPopup && t && this._compass) {\n        this._compass.bindPopup(getPopupText())._popup.setLatLng(latlng);\n      }\n    },\n    /**\n     * Remove the marker from map.\n     */\n    _removeMarker: function _removeMarker() {\n      this._layer.clearLayers();\n      this._marker = undefined;\n      this._circle = undefined;\n    },\n    /**\n     * Unload the plugin and all event listeners.\n     * Kind of the opposite of onAdd.\n     */\n    _unload: function _unload() {\n      this.stop();\n      this._map.off(\"unload\", this._unload, this);\n    },\n    /**\n     * Sets the compass heading\n     */\n    _setCompassHeading: function _setCompassHeading(angle) {\n      if (!isNaN(parseFloat(angle)) && isFinite(angle)) {\n        angle = Math.round(angle);\n        this._compassHeading = angle;\n        L.Util.requestAnimFrame(this._drawCompass, this);\n      } else {\n        this._compassHeading = null;\n      }\n    },\n    /**\n     * If the compass fails calibration just fail safely and remove the compass\n     */\n    _onCompassNeedsCalibration: function _onCompassNeedsCalibration() {\n      this._setCompassHeading();\n    },\n    /**\n     * Process and normalise compass events\n     */\n    _onDeviceOrientation: function _onDeviceOrientation(e) {\n      if (!this._active) {\n        return;\n      }\n      if (e.webkitCompassHeading) {\n        // iOS\n        this._setCompassHeading(e.webkitCompassHeading);\n      } else if (e.absolute && e.alpha) {\n        // Android\n        this._setCompassHeading(360 - e.alpha);\n      }\n    },\n    /**\n     * Calls deactivate and dispatches an error.\n     */\n    _onLocationError: function _onLocationError(err) {\n      // ignore time out error if the location is watched\n      if (err.code == 3 && this.options.locateOptions.watch) {\n        return;\n      }\n      this.stop();\n      this.options.onLocationError(err, this);\n    },\n    /**\n     * Stores the received event and updates the marker.\n     */\n    _onLocationFound: function _onLocationFound(e) {\n      // no need to do anything if the location has not changed\n      if (this._event && this._event.latlng.lat === e.latlng.lat && this._event.latlng.lng === e.latlng.lng && this._event.accuracy === e.accuracy) {\n        return;\n      }\n      if (!this._active) {\n        // we may have a stray event\n        return;\n      }\n      this._event = e;\n      this._drawMarker();\n      this._updateContainerStyle();\n      switch (this.options.setView) {\n        case \"once\":\n          if (this._justClicked) {\n            this.setView();\n          }\n          break;\n        case \"untilPan\":\n          if (!this._userPanned) {\n            this.setView();\n          }\n          break;\n        case \"untilPanOrZoom\":\n          if (!this._userPanned && !this._userZoomed) {\n            this.setView();\n          }\n          break;\n        case \"always\":\n          this.setView();\n          break;\n        case false:\n          // don't set the view\n          break;\n      }\n      this._justClicked = false;\n    },\n    /**\n     * When the user drags. Need a separate event so we can bind and unbind event listeners.\n     */\n    _onDrag: function _onDrag() {\n      // only react to drags once we have a location\n      if (this._event && !this._ignoreEvent) {\n        this._userPanned = true;\n        this._updateContainerStyle();\n        this._drawMarker();\n      }\n    },\n    /**\n     * When the user zooms. Need a separate event so we can bind and unbind event listeners.\n     */\n    _onZoom: function _onZoom() {\n      // only react to drags once we have a location\n      if (this._event && !this._ignoreEvent) {\n        this._userZoomed = true;\n        this._updateContainerStyle();\n        this._drawMarker();\n      }\n    },\n    /**\n     * After a zoom ends update the compass and handle sideways zooms\n     */\n    _onZoomEnd: function _onZoomEnd() {\n      if (this._event) {\n        this._drawCompass();\n      }\n      if (this._event && !this._ignoreEvent) {\n        // If we have zoomed in and out and ended up sideways treat it as a pan\n        if (this._marker && !this._map.getBounds().pad(-0.3).contains(this._marker.getLatLng())) {\n          this._userPanned = true;\n          this._updateContainerStyle();\n          this._drawMarker();\n        }\n      }\n    },\n    /**\n     * Compute whether the map is following the user location with pan and zoom.\n     */\n    _isFollowing: function _isFollowing() {\n      if (!this._active) {\n        return false;\n      }\n      if (this.options.setView === \"always\") {\n        return true;\n      } else if (this.options.setView === \"untilPan\") {\n        return !this._userPanned;\n      } else if (this.options.setView === \"untilPanOrZoom\") {\n        return !this._userPanned && !this._userZoomed;\n      }\n    },\n    /**\n     * Check if location is in map bounds\n     */\n    _isOutsideMapBounds: function _isOutsideMapBounds() {\n      if (this._event === undefined) {\n        return false;\n      }\n      return this._map.options.maxBounds && !this._map.options.maxBounds.contains(this._event.latlng);\n    },\n    /**\n     * Toggles button class between following and active.\n     */\n    _updateContainerStyle: function _updateContainerStyle() {\n      if (!this._container) {\n        return;\n      }\n      if (this._active && !this._event) {\n        // active but don't have a location yet\n        this._setClasses(\"requesting\");\n      } else if (this._isFollowing()) {\n        this._setClasses(\"following\");\n      } else if (this._active) {\n        this._setClasses(\"active\");\n      } else {\n        this._cleanClasses();\n      }\n    },\n    /**\n     * Sets the CSS classes for the state.\n     */\n    _setClasses: function _setClasses(state) {\n      if (state == \"requesting\") {\n        removeClasses(this._container, \"active following\");\n        addClasses(this._container, \"requesting\");\n        removeClasses(this._icon, this.options.icon);\n        addClasses(this._icon, this.options.iconLoading);\n      } else if (state == \"active\") {\n        removeClasses(this._container, \"requesting following\");\n        addClasses(this._container, \"active\");\n        removeClasses(this._icon, this.options.iconLoading);\n        addClasses(this._icon, this.options.icon);\n      } else if (state == \"following\") {\n        removeClasses(this._container, \"requesting\");\n        addClasses(this._container, \"active following\");\n        removeClasses(this._icon, this.options.iconLoading);\n        addClasses(this._icon, this.options.icon);\n      }\n    },\n    /**\n     * Removes all classes from button.\n     */\n    _cleanClasses: function _cleanClasses() {\n      L.DomUtil.removeClass(this._container, \"requesting\");\n      L.DomUtil.removeClass(this._container, \"active\");\n      L.DomUtil.removeClass(this._container, \"following\");\n      removeClasses(this._icon, this.options.iconLoading);\n      addClasses(this._icon, this.options.icon);\n    },\n    /**\n     * Reinitializes state variables.\n     */\n    _resetVariables: function _resetVariables() {\n      // whether locate is active or not\n      this._active = false;\n\n      // true if the control was clicked for the first time\n      // we need this so we can pan and zoom once we have the location\n      this._justClicked = false;\n\n      // true if the user has panned the map after clicking the control\n      this._userPanned = false;\n\n      // true if the user has zoomed the map after clicking the control\n      this._userZoomed = false;\n    }\n  });\n  L.control.locate = function (options) {\n    return new L.Control.Locate(options);\n  };\n  return LocateControl;\n}, window);","map":{"version":3,"names":["factory","window","define","amd","exports","L","module","require","Control","Locate","LDomUtilApplyClassesMethod","method","element","classNames","split","forEach","className","DomUtil","call","addClasses","el","names","removeClasses","LocationMarker","Marker","extend","initialize","latlng","options","Util","setOptions","_latlng","createIcon","opt","style","color","undefined","concat","weight","fillColor","fillOpacity","opacity","icon","_getIconSVG","_locationIcon","divIcon","html","svg","iconSize","w","h","setIcon","r","radius","s","s2","setStyle","CompassMarker","heading","_heading","setHeading","width","depth","path","svgstyle","LocateControl","position","layer","setView","keepCurrentZoomLevel","initialZoomLevel","getLocationBounds","locationEvent","bounds","flyTo","clickBehavior","inView","outOfView","inViewNotFollowing","returnToPrevBounds","cacheLocation","drawCircle","drawMarker","showCompass","markerClass","compassClass","circleStyle","markerStyle","compassStyle","followCircleStyle","followMarkerStyle","followCompassStyle","iconLoading","iconElementTag","textElementTag","circlePadding","metric","createButtonCallback","container","link","create","title","strings","href","setAttribute","text","textContent","classList","add","parentNode","display","length","onLocationError","err","control","alert","message","onLocationOutsideMapBounds","stop","outsideMapBoundsMsg","showPopup","metersUnit","feetUnit","popup","locateOptions","maxZoom","Infinity","watch","i","onAdd","map","_container","_map","_layer","LayerGroup","addTo","_event","_compassHeading","_prevBounds","linkAndIcon","_link","_icon","DomEvent","on","ev","stopPropagation","preventDefault","_onClick","_resetVariables","_unload","_justClicked","wasFollowing","_isFollowing","_userPanned","_userZoomed","_active","behaviors","behavior","getBounds","contains","f","flyToBounds","fitBounds","bind","start","_updateContainerStyle","_activate","_drawMarker","_deactivate","_cleanClasses","_removeMarker","stopFollowing","locate","fire","_onLocationFound","_onLocationError","_onDrag","_onZoom","_onZoomEnd","oriAbs","_this","deviceorientation","_onDeviceOrientation","DeviceOrientationEvent","requestPermission","then","permissionState","stopLocate","off","_isOutsideMapBounds","latitude","longitude","panTo","_ignoreEvent","padding","requestAnimFrame","_drawCompass","cStyle","_compass","setLatLng","removeFrom","accuracy","_circle","circle","setRadius","distance","unit","toFixed","mStyle","_marker","t","getPopupText","template","bindPopup","_popup","clearLayers","_setCompassHeading","angle","isNaN","parseFloat","isFinite","Math","round","_onCompassNeedsCalibration","e","webkitCompassHeading","absolute","alpha","code","lat","lng","pad","getLatLng","maxBounds","_setClasses","state","removeClass"],"sources":["/Users/tarunkumar/Desktop/SIH/node_modules/leaflet.locatecontrol/src/L.Control.Locate.js"],"sourcesContent":["/*!\nCopyright (c) 2016 Dominik Moritz\n\nThis file is part of the leaflet locate control. It is licensed under the MIT license.\nYou can find the project at: https://github.com/domoritz/leaflet-locatecontrol\n*/\n(function (factory, window) {\n  // see https://github.com/Leaflet/Leaflet/blob/master/PLUGIN-GUIDE.md#module-loaders\n  // for details on how to structure a leaflet plugin.\n\n  // define an AMD module that relies on 'leaflet'\n  if (typeof define === \"function\" && define.amd) {\n    define([\"leaflet\"], factory);\n\n    // define a Common JS module that relies on 'leaflet'\n  } else if (typeof exports === \"object\") {\n    if (typeof window !== \"undefined\" && window.L) {\n      module.exports = factory(L);\n    } else {\n      module.exports = factory(require(\"leaflet\"));\n    }\n  }\n\n  // attach your plugin to the global 'L' variable\n  if (typeof window !== \"undefined\" && window.L) {\n    window.L.Control.Locate = factory(L);\n  }\n})(function (L) {\n  const LDomUtilApplyClassesMethod = (method, element, classNames) => {\n    classNames = classNames.split(\" \");\n    classNames.forEach(function (className) {\n      L.DomUtil[method].call(this, element, className);\n    });\n  };\n\n  const addClasses = (el, names) => LDomUtilApplyClassesMethod(\"addClass\", el, names);\n  const removeClasses = (el, names) => LDomUtilApplyClassesMethod(\"removeClass\", el, names);\n\n  /**\n   * Compatible with L.Circle but a true marker instead of a path\n   */\n  const LocationMarker = L.Marker.extend({\n    initialize(latlng, options) {\n      L.Util.setOptions(this, options);\n      this._latlng = latlng;\n      this.createIcon();\n    },\n\n    /**\n     * Create a styled circle location marker\n     */\n    createIcon() {\n      const opt = this.options;\n\n      let style = \"\";\n\n      if (opt.color !== undefined) {\n        style += `stroke:${opt.color};`;\n      }\n      if (opt.weight !== undefined) {\n        style += `stroke-width:${opt.weight};`;\n      }\n      if (opt.fillColor !== undefined) {\n        style += `fill:${opt.fillColor};`;\n      }\n      if (opt.fillOpacity !== undefined) {\n        style += `fill-opacity:${opt.fillOpacity};`;\n      }\n      if (opt.opacity !== undefined) {\n        style += `opacity:${opt.opacity};`;\n      }\n\n      const icon = this._getIconSVG(opt, style);\n\n      this._locationIcon = L.divIcon({\n        className: icon.className,\n        html: icon.svg,\n        iconSize: [icon.w, icon.h]\n      });\n\n      this.setIcon(this._locationIcon);\n    },\n\n    /**\n     * Return the raw svg for the shape\n     *\n     * Split so can be easily overridden\n     */\n    _getIconSVG(options, style) {\n      const r = options.radius;\n      const w = options.weight;\n      const s = r + w;\n      const s2 = s * 2;\n      const svg =\n        `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${s2}\" height=\"${s2}\" version=\"1.1\" viewBox=\"-${s} -${s} ${s2} ${s2}\">` +\n        '<circle r=\"' +\n        r +\n        '\" style=\"' +\n        style +\n        '\" />' +\n        \"</svg>\";\n      return {\n        className: \"leaflet-control-locate-location\",\n        svg,\n        w: s2,\n        h: s2\n      };\n    },\n\n    setStyle(style) {\n      L.Util.setOptions(this, style);\n      this.createIcon();\n    }\n  });\n\n  const CompassMarker = LocationMarker.extend({\n    initialize(latlng, heading, options) {\n      L.Util.setOptions(this, options);\n      this._latlng = latlng;\n      this._heading = heading;\n      this.createIcon();\n    },\n\n    setHeading(heading) {\n      this._heading = heading;\n    },\n\n    /**\n     * Create a styled arrow compass marker\n     */\n    _getIconSVG(options, style) {\n      const r = options.radius;\n      const w = options.width + options.weight;\n      const h = (r + options.depth + options.weight) * 2;\n      const path = `M0,0 l${options.width / 2},${options.depth} l-${w},0 z`;\n      const svgstyle = `transform: rotate(${this._heading}deg)`;\n      const svg =\n        `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${w}\" height=\"${h}\" version=\"1.1\" viewBox=\"-${w / 2} 0 ${w} ${h}\" style=\"${svgstyle}\">` +\n        '<path d=\"' +\n        path +\n        '\" style=\"' +\n        style +\n        '\" />' +\n        \"</svg>\";\n      return {\n        className: \"leaflet-control-locate-heading\",\n        svg,\n        w,\n        h\n      };\n    }\n  });\n\n  const LocateControl = L.Control.extend({\n    options: {\n      /** Position of the control */\n      position: \"topleft\",\n      /** The layer that the user's location should be drawn on. By default creates a new layer. */\n      layer: undefined,\n      /**\n       * Automatically sets the map view (zoom and pan) to the user's location as it updates.\n       * While the map is following the user's location, the control is in the `following` state,\n       * which changes the style of the control and the circle marker.\n       *\n       * Possible values:\n       *  - false: never updates the map view when location changes.\n       *  - 'once': set the view when the location is first determined\n       *  - 'always': always updates the map view when location changes.\n       *              The map view follows the user's location.\n       *  - 'untilPan': like 'always', except stops updating the\n       *                view if the user has manually panned the map.\n       *                The map view follows the user's location until she pans.\n       *  - 'untilPanOrZoom': (default) like 'always', except stops updating the\n       *                view if the user has manually panned the map.\n       *                The map view follows the user's location until she pans.\n       */\n      setView: \"untilPanOrZoom\",\n      /** Keep the current map zoom level when setting the view and only pan. */\n      keepCurrentZoomLevel: false,\n      /** After activating the plugin by clicking on the icon, zoom to the selected zoom level, even when keepCurrentZoomLevel is true. Set to 'false' to disable this feature. */\n      initialZoomLevel: false,\n      /**\n       * This callback can be used to override the viewport tracking\n       * This function should return a LatLngBounds object.\n       *\n       * For example to extend the viewport to ensure that a particular LatLng is visible:\n       *\n       * getLocationBounds: function(locationEvent) {\n       *    return locationEvent.bounds.extend([-33.873085, 151.219273]);\n       * },\n       */\n      getLocationBounds(locationEvent) {\n        return locationEvent.bounds;\n      },\n      /** Smooth pan and zoom to the location of the marker. Only works in Leaflet 1.0+. */\n      flyTo: false,\n      /**\n       * The user location can be inside and outside the current view when the user clicks on the\n       * control that is already active. Both cases can be configures separately.\n       * Possible values are:\n       *  - 'setView': zoom and pan to the current location\n       *  - 'stop': stop locating and remove the location marker\n       */\n      clickBehavior: {\n        /** What should happen if the user clicks on the control while the location is within the current view. */\n        inView: \"stop\",\n        /** What should happen if the user clicks on the control while the location is outside the current view. */\n        outOfView: \"setView\",\n        /**\n         * What should happen if the user clicks on the control while the location is within the current view\n         * and we could be following but are not. Defaults to a special value which inherits from 'inView';\n         */\n        inViewNotFollowing: \"inView\"\n      },\n      /**\n       * If set, save the map bounds just before centering to the user's\n       * location. When control is disabled, set the view back to the\n       * bounds that were saved.\n       */\n      returnToPrevBounds: false,\n      /**\n       * Keep a cache of the location after the user deactivates the control. If set to false, the user has to wait\n       * until the locate API returns a new location before they see where they are again.\n       */\n      cacheLocation: true,\n      /** If set, a circle that shows the location accuracy is drawn. */\n      drawCircle: true,\n      /** If set, the marker at the users' location is drawn. */\n      drawMarker: true,\n      /** If set and supported then show the compass heading */\n      showCompass: true,\n      /** The class to be used to create the marker. For example L.CircleMarker or L.Marker */\n      markerClass: LocationMarker,\n      /** The class us be used to create the compass bearing arrow */\n      compassClass: CompassMarker,\n      /** Accuracy circle style properties. NOTE these styles should match the css animations styles */\n      circleStyle: {\n        className: \"leaflet-control-locate-circle\",\n        color: \"#136AEC\",\n        fillColor: \"#136AEC\",\n        fillOpacity: 0.15,\n        weight: 0\n      },\n      /** Inner marker style properties. Only works if your marker class supports `setStyle`. */\n      markerStyle: {\n        className: \"leaflet-control-locate-marker\",\n        color: \"#fff\",\n        fillColor: \"#2A93EE\",\n        fillOpacity: 1,\n        weight: 3,\n        opacity: 1,\n        radius: 9\n      },\n      /** Compass */\n      compassStyle: {\n        fillColor: \"#2A93EE\",\n        fillOpacity: 1,\n        weight: 0,\n        color: \"#fff\",\n        opacity: 1,\n        radius: 9, // How far is the arrow is from the center of of the marker\n        width: 9, // Width of the arrow\n        depth: 6 // Length of the arrow\n      },\n      /**\n       * Changes to accuracy circle and inner marker while following.\n       * It is only necessary to provide the properties that should change.\n       */\n      followCircleStyle: {},\n      followMarkerStyle: {\n        // color: '#FFA500',\n        // fillColor: '#FFB000'\n      },\n      followCompassStyle: {},\n      /** The CSS class for the icon. For example fa-location-arrow or fa-map-marker */\n      icon: \"leaflet-control-locate-location-arrow\",\n      iconLoading: \"leaflet-control-locate-spinner\",\n      /** The element to be created for icons. For example span or i */\n      iconElementTag: \"span\",\n      /** The element to be created for the text. For example small or span */\n      textElementTag: \"small\",\n      /** Padding around the accuracy circle. */\n      circlePadding: [0, 0],\n      /** Use metric units. */\n      metric: true,\n      /**\n       * This callback can be used in case you would like to override button creation behavior.\n       * This is useful for DOM manipulation frameworks such as angular etc.\n       * This function should return an object with HtmlElement for the button (link property) and the icon (icon property).\n       */\n      createButtonCallback(container, options) {\n        const link = L.DomUtil.create(\"a\", \"leaflet-bar-part leaflet-bar-part-single\", container);\n        link.title = options.strings.title;\n        link.href = \"#\";\n        link.setAttribute(\"role\", \"button\");\n        const icon = L.DomUtil.create(options.iconElementTag, options.icon, link);\n\n        if (options.strings.text !== undefined) {\n          const text = L.DomUtil.create(options.textElementTag, \"leaflet-locate-text\", link);\n          text.textContent = options.strings.text;\n          link.classList.add(\"leaflet-locate-text-active\");\n          link.parentNode.style.display = \"flex\";\n          if (options.icon.length > 0) {\n            icon.classList.add(\"leaflet-locate-icon\");\n          }\n        }\n\n        return { link, icon };\n      },\n      /** This event is called in case of any location error that is not a time out error. */\n      onLocationError(err, control) {\n        alert(err.message);\n      },\n      /**\n       * This event is called when the user's location is outside the bounds set on the map.\n       * The event is called repeatedly when the location changes.\n       */\n      onLocationOutsideMapBounds(control) {\n        control.stop();\n        alert(control.options.strings.outsideMapBoundsMsg);\n      },\n      /** Display a pop-up when the user click on the inner marker. */\n      showPopup: true,\n      strings: {\n        title: \"Show me where I am\",\n        metersUnit: \"meters\",\n        feetUnit: \"feet\",\n        popup: \"You are within {distance} {unit} from this point\",\n        outsideMapBoundsMsg: \"You seem located outside the boundaries of the map\"\n      },\n      /** The default options passed to leaflets locate method. */\n      locateOptions: {\n        maxZoom: Infinity,\n        watch: true, // if you overwrite this, visualization cannot be updated\n        setView: false // have to set this to false because we have to\n        // do setView manually\n      }\n    },\n\n    initialize(options) {\n      // set default options if nothing is set (merge one step deep)\n      for (const i in options) {\n        if (typeof this.options[i] === \"object\") {\n          L.extend(this.options[i], options[i]);\n        } else {\n          this.options[i] = options[i];\n        }\n      }\n\n      // extend the follow marker style and circle from the normal style\n      this.options.followMarkerStyle = L.extend({}, this.options.markerStyle, this.options.followMarkerStyle);\n      this.options.followCircleStyle = L.extend({}, this.options.circleStyle, this.options.followCircleStyle);\n      this.options.followCompassStyle = L.extend({}, this.options.compassStyle, this.options.followCompassStyle);\n    },\n\n    /**\n     * Add control to map. Returns the container for the control.\n     */\n    onAdd(map) {\n      const container = L.DomUtil.create(\"div\", \"leaflet-control-locate leaflet-bar leaflet-control\");\n      this._container = container;\n      this._map = map;\n      this._layer = this.options.layer || new L.LayerGroup();\n      this._layer.addTo(map);\n      this._event = undefined;\n      this._compassHeading = null;\n      this._prevBounds = null;\n\n      const linkAndIcon = this.options.createButtonCallback(container, this.options);\n      this._link = linkAndIcon.link;\n      this._icon = linkAndIcon.icon;\n\n      L.DomEvent.on(\n        this._link,\n        \"click\",\n        function (ev) {\n          L.DomEvent.stopPropagation(ev);\n          L.DomEvent.preventDefault(ev);\n          this._onClick();\n        },\n        this\n      ).on(this._link, \"dblclick\", L.DomEvent.stopPropagation);\n\n      this._resetVariables();\n\n      this._map.on(\"unload\", this._unload, this);\n\n      return container;\n    },\n\n    /**\n     * This method is called when the user clicks on the control.\n     */\n    _onClick() {\n      this._justClicked = true;\n      const wasFollowing = this._isFollowing();\n      this._userPanned = false;\n      this._userZoomed = false;\n\n      if (this._active && !this._event) {\n        // click while requesting\n        this.stop();\n      } else if (this._active) {\n        const behaviors = this.options.clickBehavior;\n        let behavior = behaviors.outOfView;\n        if (this._map.getBounds().contains(this._event.latlng)) {\n          behavior = wasFollowing ? behaviors.inView : behaviors.inViewNotFollowing;\n        }\n\n        // Allow inheriting from another behavior\n        if (behaviors[behavior]) {\n          behavior = behaviors[behavior];\n        }\n\n        switch (behavior) {\n          case \"setView\":\n            this.setView();\n            break;\n          case \"stop\":\n            this.stop();\n            if (this.options.returnToPrevBounds) {\n              const f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n              f.bind(this._map)(this._prevBounds);\n            }\n            break;\n        }\n      } else {\n        if (this.options.returnToPrevBounds) {\n          this._prevBounds = this._map.getBounds();\n        }\n        this.start();\n      }\n\n      this._updateContainerStyle();\n    },\n\n    /**\n     * Starts the plugin:\n     * - activates the engine\n     * - draws the marker (if coordinates available)\n     */\n    start() {\n      this._activate();\n\n      if (this._event) {\n        this._drawMarker(this._map);\n\n        // if we already have a location but the user clicked on the control\n        if (this.options.setView) {\n          this.setView();\n        }\n      }\n      this._updateContainerStyle();\n    },\n\n    /**\n     * Stops the plugin:\n     * - deactivates the engine\n     * - reinitializes the button\n     * - removes the marker\n     */\n    stop() {\n      this._deactivate();\n\n      this._cleanClasses();\n      this._resetVariables();\n\n      this._removeMarker();\n    },\n\n    /**\n     * Keep the control active but stop following the location\n     */\n    stopFollowing() {\n      this._userPanned = true;\n      this._updateContainerStyle();\n      this._drawMarker();\n    },\n\n    /**\n     * This method launches the location engine.\n     * It is called before the marker is updated,\n     * event if it does not mean that the event will be ready.\n     *\n     * Override it if you want to add more functionalities.\n     * It should set the this._active to true and do nothing if\n     * this._active is true.\n     */\n    _activate() {\n      if (this._active || !this._map) {\n        return;\n      }\n\n      this._map.locate(this.options.locateOptions);\n      this._map.fire(\"locateactivate\", this);\n      this._active = true;\n\n      // bind event listeners\n      this._map.on(\"locationfound\", this._onLocationFound, this);\n      this._map.on(\"locationerror\", this._onLocationError, this);\n      this._map.on(\"dragstart\", this._onDrag, this);\n      this._map.on(\"zoomstart\", this._onZoom, this);\n      this._map.on(\"zoomend\", this._onZoomEnd, this);\n      if (this.options.showCompass) {\n        const oriAbs = \"ondeviceorientationabsolute\" in window;\n        if (oriAbs || \"ondeviceorientation\" in window) {\n          const _this = this;\n          const deviceorientation = function () {\n            L.DomEvent.on(window, oriAbs ? \"deviceorientationabsolute\" : \"deviceorientation\", _this._onDeviceOrientation, _this);\n          };\n          if (DeviceOrientationEvent && typeof DeviceOrientationEvent.requestPermission === \"function\") {\n            DeviceOrientationEvent.requestPermission().then(function (permissionState) {\n              if (permissionState === \"granted\") {\n                deviceorientation();\n              }\n            });\n          } else {\n            deviceorientation();\n          }\n        }\n      }\n    },\n\n    /**\n     * Called to stop the location engine.\n     *\n     * Override it to shutdown any functionalities you added on start.\n     */\n    _deactivate() {\n      if (!this._active || !this._map) {\n        return;\n      }\n\n      this._map.stopLocate();\n      this._map.fire(\"locatedeactivate\", this);\n      this._active = false;\n\n      if (!this.options.cacheLocation) {\n        this._event = undefined;\n      }\n\n      // unbind event listeners\n      this._map.off(\"locationfound\", this._onLocationFound, this);\n      this._map.off(\"locationerror\", this._onLocationError, this);\n      this._map.off(\"dragstart\", this._onDrag, this);\n      this._map.off(\"zoomstart\", this._onZoom, this);\n      this._map.off(\"zoomend\", this._onZoomEnd, this);\n      if (this.options.showCompass) {\n        this._compassHeading = null;\n        if (\"ondeviceorientationabsolute\" in window) {\n          L.DomEvent.off(window, \"deviceorientationabsolute\", this._onDeviceOrientation, this);\n        } else if (\"ondeviceorientation\" in window) {\n          L.DomEvent.off(window, \"deviceorientation\", this._onDeviceOrientation, this);\n        }\n      }\n    },\n\n    /**\n     * Zoom (unless we should keep the zoom level) and an to the current view.\n     */\n    setView() {\n      this._drawMarker();\n      if (this._isOutsideMapBounds()) {\n        this._event = undefined; // clear the current location so we can get back into the bounds\n        this.options.onLocationOutsideMapBounds(this);\n      } else {\n        if (this._justClicked && this.options.initialZoomLevel !== false) {\n          var f = this.options.flyTo ? this._map.flyTo : this._map.setView;\n          f.bind(this._map)([this._event.latitude, this._event.longitude], this.options.initialZoomLevel);\n        } else if (this.options.keepCurrentZoomLevel) {\n          var f = this.options.flyTo ? this._map.flyTo : this._map.panTo;\n          f.bind(this._map)([this._event.latitude, this._event.longitude]);\n        } else {\n          var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n          // Ignore zoom events while setting the viewport as these would stop following\n          this._ignoreEvent = true;\n          f.bind(this._map)(this.options.getLocationBounds(this._event), {\n            padding: this.options.circlePadding,\n            maxZoom: this.options.initialZoomLevel || this.options.locateOptions.maxZoom\n          });\n          L.Util.requestAnimFrame(function () {\n            // Wait until after the next animFrame because the flyTo can be async\n            this._ignoreEvent = false;\n          }, this);\n        }\n      }\n    },\n\n    /**\n     *\n     */\n    _drawCompass() {\n      if (!this._event) {\n        return;\n      }\n\n      const latlng = this._event.latlng;\n\n      if (this.options.showCompass && latlng && this._compassHeading !== null) {\n        const cStyle = this._isFollowing() ? this.options.followCompassStyle : this.options.compassStyle;\n        if (!this._compass) {\n          this._compass = new this.options.compassClass(latlng, this._compassHeading, cStyle).addTo(this._layer);\n        } else {\n          this._compass.setLatLng(latlng);\n          this._compass.setHeading(this._compassHeading);\n          // If the compassClass can be updated with setStyle, update it.\n          if (this._compass.setStyle) {\n            this._compass.setStyle(cStyle);\n          }\n        }\n        //\n      }\n      if (this._compass && (!this.options.showCompass || this._compassHeading === null)) {\n        this._compass.removeFrom(this._layer);\n        this._compass = null;\n      }\n    },\n\n    /**\n     * Draw the marker and accuracy circle on the map.\n     *\n     * Uses the event retrieved from onLocationFound from the map.\n     */\n    _drawMarker() {\n      if (this._event.accuracy === undefined) {\n        this._event.accuracy = 0;\n      }\n\n      const radius = this._event.accuracy;\n      const latlng = this._event.latlng;\n\n      // circle with the radius of the location's accuracy\n      if (this.options.drawCircle) {\n        const style = this._isFollowing() ? this.options.followCircleStyle : this.options.circleStyle;\n\n        if (!this._circle) {\n          this._circle = L.circle(latlng, radius, style).addTo(this._layer);\n        } else {\n          this._circle.setLatLng(latlng).setRadius(radius).setStyle(style);\n        }\n      }\n\n      let distance;\n      let unit;\n      if (this.options.metric) {\n        distance = radius.toFixed(0);\n        unit = this.options.strings.metersUnit;\n      } else {\n        distance = (radius * 3.2808399).toFixed(0);\n        unit = this.options.strings.feetUnit;\n      }\n\n      // small inner marker\n      if (this.options.drawMarker) {\n        const mStyle = this._isFollowing() ? this.options.followMarkerStyle : this.options.markerStyle;\n        if (!this._marker) {\n          this._marker = new this.options.markerClass(latlng, mStyle).addTo(this._layer);\n        } else {\n          this._marker.setLatLng(latlng);\n          // If the markerClass can be updated with setStyle, update it.\n          if (this._marker.setStyle) {\n            this._marker.setStyle(mStyle);\n          }\n        }\n      }\n\n      this._drawCompass();\n\n      const t = this.options.strings.popup;\n      function getPopupText() {\n        if (typeof t === \"string\") {\n          return L.Util.template(t, { distance, unit });\n        } else if (typeof t === \"function\") {\n          return t({ distance, unit });\n        } else {\n          return t;\n        }\n      }\n      if (this.options.showPopup && t && this._marker) {\n        this._marker.bindPopup(getPopupText())._popup.setLatLng(latlng);\n      }\n      if (this.options.showPopup && t && this._compass) {\n        this._compass.bindPopup(getPopupText())._popup.setLatLng(latlng);\n      }\n    },\n\n    /**\n     * Remove the marker from map.\n     */\n    _removeMarker() {\n      this._layer.clearLayers();\n      this._marker = undefined;\n      this._circle = undefined;\n    },\n\n    /**\n     * Unload the plugin and all event listeners.\n     * Kind of the opposite of onAdd.\n     */\n    _unload() {\n      this.stop();\n      this._map.off(\"unload\", this._unload, this);\n    },\n\n    /**\n     * Sets the compass heading\n     */\n    _setCompassHeading(angle) {\n      if (!isNaN(parseFloat(angle)) && isFinite(angle)) {\n        angle = Math.round(angle);\n\n        this._compassHeading = angle;\n        L.Util.requestAnimFrame(this._drawCompass, this);\n      } else {\n        this._compassHeading = null;\n      }\n    },\n\n    /**\n     * If the compass fails calibration just fail safely and remove the compass\n     */\n    _onCompassNeedsCalibration() {\n      this._setCompassHeading();\n    },\n\n    /**\n     * Process and normalise compass events\n     */\n    _onDeviceOrientation(e) {\n      if (!this._active) {\n        return;\n      }\n\n      if (e.webkitCompassHeading) {\n        // iOS\n        this._setCompassHeading(e.webkitCompassHeading);\n      } else if (e.absolute && e.alpha) {\n        // Android\n        this._setCompassHeading(360 - e.alpha);\n      }\n    },\n\n    /**\n     * Calls deactivate and dispatches an error.\n     */\n    _onLocationError(err) {\n      // ignore time out error if the location is watched\n      if (err.code == 3 && this.options.locateOptions.watch) {\n        return;\n      }\n\n      this.stop();\n      this.options.onLocationError(err, this);\n    },\n\n    /**\n     * Stores the received event and updates the marker.\n     */\n    _onLocationFound(e) {\n      // no need to do anything if the location has not changed\n      if (this._event && this._event.latlng.lat === e.latlng.lat && this._event.latlng.lng === e.latlng.lng && this._event.accuracy === e.accuracy) {\n        return;\n      }\n\n      if (!this._active) {\n        // we may have a stray event\n        return;\n      }\n\n      this._event = e;\n\n      this._drawMarker();\n      this._updateContainerStyle();\n\n      switch (this.options.setView) {\n        case \"once\":\n          if (this._justClicked) {\n            this.setView();\n          }\n          break;\n        case \"untilPan\":\n          if (!this._userPanned) {\n            this.setView();\n          }\n          break;\n        case \"untilPanOrZoom\":\n          if (!this._userPanned && !this._userZoomed) {\n            this.setView();\n          }\n          break;\n        case \"always\":\n          this.setView();\n          break;\n        case false:\n          // don't set the view\n          break;\n      }\n\n      this._justClicked = false;\n    },\n\n    /**\n     * When the user drags. Need a separate event so we can bind and unbind event listeners.\n     */\n    _onDrag() {\n      // only react to drags once we have a location\n      if (this._event && !this._ignoreEvent) {\n        this._userPanned = true;\n        this._updateContainerStyle();\n        this._drawMarker();\n      }\n    },\n\n    /**\n     * When the user zooms. Need a separate event so we can bind and unbind event listeners.\n     */\n    _onZoom() {\n      // only react to drags once we have a location\n      if (this._event && !this._ignoreEvent) {\n        this._userZoomed = true;\n        this._updateContainerStyle();\n        this._drawMarker();\n      }\n    },\n\n    /**\n     * After a zoom ends update the compass and handle sideways zooms\n     */\n    _onZoomEnd() {\n      if (this._event) {\n        this._drawCompass();\n      }\n\n      if (this._event && !this._ignoreEvent) {\n        // If we have zoomed in and out and ended up sideways treat it as a pan\n        if (this._marker && !this._map.getBounds().pad(-0.3).contains(this._marker.getLatLng())) {\n          this._userPanned = true;\n          this._updateContainerStyle();\n          this._drawMarker();\n        }\n      }\n    },\n\n    /**\n     * Compute whether the map is following the user location with pan and zoom.\n     */\n    _isFollowing() {\n      if (!this._active) {\n        return false;\n      }\n\n      if (this.options.setView === \"always\") {\n        return true;\n      } else if (this.options.setView === \"untilPan\") {\n        return !this._userPanned;\n      } else if (this.options.setView === \"untilPanOrZoom\") {\n        return !this._userPanned && !this._userZoomed;\n      }\n    },\n\n    /**\n     * Check if location is in map bounds\n     */\n    _isOutsideMapBounds() {\n      if (this._event === undefined) {\n        return false;\n      }\n      return this._map.options.maxBounds && !this._map.options.maxBounds.contains(this._event.latlng);\n    },\n\n    /**\n     * Toggles button class between following and active.\n     */\n    _updateContainerStyle() {\n      if (!this._container) {\n        return;\n      }\n\n      if (this._active && !this._event) {\n        // active but don't have a location yet\n        this._setClasses(\"requesting\");\n      } else if (this._isFollowing()) {\n        this._setClasses(\"following\");\n      } else if (this._active) {\n        this._setClasses(\"active\");\n      } else {\n        this._cleanClasses();\n      }\n    },\n\n    /**\n     * Sets the CSS classes for the state.\n     */\n    _setClasses(state) {\n      if (state == \"requesting\") {\n        removeClasses(this._container, \"active following\");\n        addClasses(this._container, \"requesting\");\n\n        removeClasses(this._icon, this.options.icon);\n        addClasses(this._icon, this.options.iconLoading);\n      } else if (state == \"active\") {\n        removeClasses(this._container, \"requesting following\");\n        addClasses(this._container, \"active\");\n\n        removeClasses(this._icon, this.options.iconLoading);\n        addClasses(this._icon, this.options.icon);\n      } else if (state == \"following\") {\n        removeClasses(this._container, \"requesting\");\n        addClasses(this._container, \"active following\");\n\n        removeClasses(this._icon, this.options.iconLoading);\n        addClasses(this._icon, this.options.icon);\n      }\n    },\n\n    /**\n     * Removes all classes from button.\n     */\n    _cleanClasses() {\n      L.DomUtil.removeClass(this._container, \"requesting\");\n      L.DomUtil.removeClass(this._container, \"active\");\n      L.DomUtil.removeClass(this._container, \"following\");\n\n      removeClasses(this._icon, this.options.iconLoading);\n      addClasses(this._icon, this.options.icon);\n    },\n\n    /**\n     * Reinitializes state variables.\n     */\n    _resetVariables() {\n      // whether locate is active or not\n      this._active = false;\n\n      // true if the control was clicked for the first time\n      // we need this so we can pan and zoom once we have the location\n      this._justClicked = false;\n\n      // true if the user has panned the map after clicking the control\n      this._userPanned = false;\n\n      // true if the user has zoomed the map after clicking the control\n      this._userZoomed = false;\n    }\n  });\n\n  L.control.locate = (options) => new L.Control.Locate(options);\n\n  return LocateControl;\n}, window);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}