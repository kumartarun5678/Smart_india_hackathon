{"ast":null,"code":"var _s = $RefreshSig$();\n// Login.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from './UserContext'; // Import the useUser hook\n\nconst json = await response.json();\nconst Login = props => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n  const {\n    setUser\n  } = useUser(); // Get the setUser function from UserContext\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // ... (Your login logic here)\n    if (json.success) {\n      localStorage.setItem('token', json.authtoken);\n      setUser(json.user); // Set the user after successful login\n      navigate('/');\n      props.showAlert(\"Logged in successfully\", \"success\");\n    } else {\n      props.showAlert(\"Invalid Credentials\", \"danger\");\n    }\n  };\n\n  // ... (Rest of your component)\n};\n_s(Login, \"XFllQwZkRBkM04RNfMgt+rK0wJs=\", false, function () {\n  return [useNavigate, useUser];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useUser","json","response","Login","props","_s","credentials","setCredentials","email","password","navigate","setUser","handleSubmit","e","preventDefault","success","localStorage","setItem","authtoken","user","showAlert","_c","$RefreshReg$"],"sources":["/Users/tarunkumar/Documents/iNoteBOOK/src/components/Login.js"],"sourcesContent":["// Login.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useUser } from './UserContext'; // Import the useUser hook\n\nconst json = await response.json();\n\n\nconst Login = (props) => {\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n  const navigate = useNavigate();\n  const { setUser } = useUser(); // Get the setUser function from UserContext\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // ... (Your login logic here)\n    if (json.success) {\n      localStorage.setItem('token', json.authtoken);\n      setUser(json.user); // Set the user after successful login\n      navigate('/');\n      props.showAlert(\"Logged in successfully\", \"success\");\n    } else {\n      props.showAlert(\"Invalid Credentials\", \"danger\");\n    }\n  }\n\n  // ... (Rest of your component)\n};\n\nexport default Login;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,eAAe,CAAC,CAAC;;AAEzC,MAAMC,IAAI,GAAG,MAAMC,QAAQ,CAACD,IAAI,CAAC,CAAC;AAGlC,MAAME,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC;IAAEU,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC3E,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY;EAAQ,CAAC,GAAGX,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE/B,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,IAAIb,IAAI,CAACc,OAAO,EAAE;MAChBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEhB,IAAI,CAACiB,SAAS,CAAC;MAC7CP,OAAO,CAACV,IAAI,CAACkB,IAAI,CAAC,CAAC,CAAC;MACpBT,QAAQ,CAAC,GAAG,CAAC;MACbN,KAAK,CAACgB,SAAS,CAAC,wBAAwB,EAAE,SAAS,CAAC;IACtD,CAAC,MAAM;MACLhB,KAAK,CAACgB,SAAS,CAAC,qBAAqB,EAAE,QAAQ,CAAC;IAClD;EACF,CAAC;;EAED;AACF,CAAC;AAACf,EAAA,CAnBIF,KAAK;EAAA,QAEQJ,WAAW,EACRC,OAAO;AAAA;AAAAqB,EAAA,GAHvBlB,KAAK;AAqBX,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}