{"ast":null,"code":"var _jsxFileName = \"/Users/tarunkumar/Desktop/SIH/src/components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport L from 'leaflet';\nimport 'leaflet-routing-machine';\nimport 'leaflet-control-geocoder';\nimport 'leaflet.locatecontrol';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport 'leaflet-control-geocoder/dist/Control.Geocoder.css';\nimport 'leaflet.locatecontrol/dist/L.Control.Locate.min.css';\nimport busIconUrl from './logo.png'; // Update the path to your bus icon image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  useEffect(() => {\n    // Check if the 'map' element exists\n    const mapContainer = document.getElementById('map');\n    if (!mapContainer) {\n      return;\n    }\n\n    // Initialize the map\n    const map = L.map(mapContainer).setView([25.5941, 85.1376], 11);\n\n    // Add the OpenStreetMap tile layer\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n      attribution: 'Leaflet &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n      maxZoom: 18\n    }).addTo(map);\n\n    // Create a marker icon\n    const busIcon = L.icon({\n      iconUrl: busIconUrl,\n      // Use the imported icon URL\n      iconSize: [40, 40]\n    });\n    let marker;\n\n    // Add a marker to the map\n    marker = L.marker([25.5941, 85.1376], {\n      icon: busIcon\n    }).addTo(map);\n\n    // ... (rest of your code)\n\n    // Handle map click event\n    map.on('click', e => {\n      // Create a routing control with waypoints\n      L.Routing.control({\n        waypoints: [L.latLng(25.5941, 85.1376), L.latLng(e.latlng.lat, e.latlng.lng)]\n      }).on('routesfound', e => {\n        // Handle routes found event\n        const routes = e.routes;\n        e.routes[0].coordinates.forEach((coord, index) => {\n          setTimeout(() => {\n            marker.setLatLng([coord.lat, coord.lng]);\n          }, 100 * index);\n        });\n      }).addTo(map);\n    });\n\n    // Check for geolocation support and set the user's position on the map\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        const geolocationMarker = L.marker(pos);\n        geolocationMarker.addTo(map);\n        map.setView(pos, 11);\n      }, () => {\n        console.log('Geolocation is not supported by your browser');\n      });\n    } else {\n      console.log('Geolocation is not supported by your browser');\n    }\n\n    // Add geocoder control\n    L.Control.geocoder().addTo(map);\n\n    // Add locate control\n    L.control.locate().addTo(map);\n\n    // Cleanup function\n    return () => {\n      if (marker) {\n        marker.remove();\n      }\n      map.remove();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: '50%',\n        height: '35vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","L","busIconUrl","jsxDEV","_jsxDEV","MapComponent","_s","mapContainer","document","getElementById","map","setView","tileLayer","attribution","maxZoom","addTo","busIcon","icon","iconUrl","iconSize","marker","on","e","Routing","control","waypoints","latLng","latlng","lat","lng","routes","coordinates","forEach","coord","index","setTimeout","setLatLng","navigator","geolocation","getCurrentPosition","position","pos","coords","latitude","longitude","geolocationMarker","console","log","Control","geocoder","locate","remove","children","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tarunkumar/Desktop/SIH/src/components/MapComponent.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport L from 'leaflet';\nimport 'leaflet-routing-machine';\nimport 'leaflet-control-geocoder';\nimport 'leaflet.locatecontrol';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport 'leaflet-control-geocoder/dist/Control.Geocoder.css';\nimport 'leaflet.locatecontrol/dist/L.Control.Locate.min.css';\n\nimport busIconUrl from './logo.png'; // Update the path to your bus icon image\n\nconst MapComponent = () => {\n  useEffect(() => {\n    // Check if the 'map' element exists\n    const mapContainer = document.getElementById('map');\n    if (!mapContainer) {\n      return;\n    }\n\n    // Initialize the map\n    const map = L.map(mapContainer).setView([25.5941, 85.1376], 11);\n\n    // Add the OpenStreetMap tile layer\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n      attribution: 'Leaflet &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n      maxZoom: 18,\n    }).addTo(map);\n\n    // Create a marker icon\n    const busIcon = L.icon({\n      iconUrl: busIconUrl, // Use the imported icon URL\n      iconSize: [40, 40],\n    });\n\n    let marker;\n\n    // Add a marker to the map\n    marker = L.marker([25.5941, 85.1376], { icon: busIcon }).addTo(map);\n\n    // ... (rest of your code)\n\n   \n\n\n    // Handle map click event\n    map.on('click', (e) => {\n      // Create a routing control with waypoints\n      L.Routing.control({\n        waypoints: [\n          L.latLng(25.5941, 85.1376),\n          L.latLng(e.latlng.lat, e.latlng.lng),\n        ],\n      }).on('routesfound', (e) => {\n        // Handle routes found event\n        const routes = e.routes;\n        e.routes[0].coordinates.forEach((coord, index) => {\n          setTimeout(() => {\n            marker.setLatLng([coord.lat, coord.lng]);\n          }, 100 * index);\n        });\n      }).addTo(map);\n    });\n\n    // Check for geolocation support and set the user's position on the map\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const pos = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          };\n\n          const geolocationMarker = L.marker(pos);\n          geolocationMarker.addTo(map);\n          map.setView(pos, 11);\n        },\n        () => {\n          console.log('Geolocation is not supported by your browser');\n        }\n      );\n    } else {\n      console.log('Geolocation is not supported by your browser');\n    }\n\n    // Add geocoder control\n    L.Control.geocoder().addTo(map);\n\n    // Add locate control\n    L.control.locate().addTo(map);\n\n    // Cleanup function\n    return () => {\n      if (marker) {\n        marker.remove();\n      }\n      map.remove();\n    };\n  }, []);\n\n  return (\n    <div>\n      <div id=\"map\" style={{ width: '50%', height: '35vh' }}></div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}