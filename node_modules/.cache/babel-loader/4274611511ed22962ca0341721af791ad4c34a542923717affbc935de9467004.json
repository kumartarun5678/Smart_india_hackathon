{"ast":null,"code":"var _jsxFileName = \"/Users/tarunkumar/Desktop/vehicle Tracking/SIH/Untitled/SIH/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const [resetPasswordEmail, setResetPasswordEmail] = useState('');\n  const [resetPasswordMode, setResetPasswordMode] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8000/api/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: credentials.email,\n        password: credentials.password\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    if (json.success) {\n      localStorage.setItem('token', json.authtoken);\n      navigate('/');\n      props.showAlert('Logged in successfully', 'success');\n    } else {\n      props.showAlert('Invalid Credentials', 'danger');\n    }\n  };\n  const handleResetPasswordClick = () => {\n    setResetPasswordMode(true);\n  };\n  const handleResetPasswordSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8000/api/resetPassword/request', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: resetPasswordEmail\n      })\n    });\n    const json = await response.json();\n    if (json.success) {\n      props.showAlert('Password reset email sent', 'success');\n      setResetPasswordMode(false);\n    } else {\n      props.showAlert('Password reset request failed', 'danger');\n    }\n  };\n  const onChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  const onResetEmailChange = e => {\n    setResetPasswordEmail(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login to continue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-link\",\n          onClick: handleResetPasswordClick,\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), resetPasswordMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleResetPasswordSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"resetEmail\",\n            className: \"form-label\",\n            children: \"Enter your email address to reset your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            id: \"resetEmail\",\n            name: \"resetEmail\",\n            \"aria-describedby\": \"resetEmailHelp\",\n            value: resetPasswordEmail,\n            onChange: onResetEmailChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"resetEmailHelp\",\n            className: \"form-text\",\n            children: \"We'll send a password reset link to this email address.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"8Csbc4Qd89kMfWJlrswio3sK7ho=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","props","_s","credentials","setCredentials","email","password","resetPasswordEmail","setResetPasswordEmail","resetPasswordMode","setResetPasswordMode","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","json","console","log","success","localStorage","setItem","authtoken","showAlert","handleResetPasswordClick","handleResetPasswordSubmit","onChange","target","name","value","onResetEmailChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onClick","htmlFor","id","required","_c","$RefreshReg$"],"sources":["/Users/tarunkumar/Desktop/vehicle Tracking/SIH/Untitled/SIH/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = (props) => {\n  const [credentials, setCredentials] = useState({ email: '', password: '' });\n  const [resetPasswordEmail, setResetPasswordEmail] = useState('');\n  const [resetPasswordMode, setResetPasswordMode] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8000/api/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n    });\n    const json = await response.json();\n    console.log(json);\n    if (json.success) {\n      localStorage.setItem('token', json.authtoken);\n      navigate('/');\n      props.showAlert('Logged in successfully', 'success');\n    } else {\n      props.showAlert('Invalid Credentials', 'danger');\n    }\n  };\n\n  const handleResetPasswordClick = () => {\n    setResetPasswordMode(true);\n  };\n\n  const handleResetPasswordSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8000/api/resetPassword/request', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email: resetPasswordEmail }),\n    });\n    const json = await response.json();\n    if (json.success) {\n      props.showAlert('Password reset email sent', 'success');\n      setResetPasswordMode(false);\n    } else {\n      props.showAlert('Password reset request failed', 'danger');\n    }\n  };\n\n  const onChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  const onResetEmailChange = (e) => {\n    setResetPasswordEmail(e.target.value);\n  };\n\n  return (\n    <div className=\"mt-3\">\n      <h2>Login to continue</h2>\n      <form onSubmit={handleSubmit}>\n        {/* ... Existing login form fields ... */}\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n        <p className=\"mt-2\">\n          <button type=\"button\" className=\"btn btn-link\" onClick={handleResetPasswordClick}>\n            Forgot Password?\n          </button>\n        </p>\n      </form>\n\n      {resetPasswordMode && (\n        <div>\n          <h2>Reset Password</h2>\n          <form onSubmit={handleResetPasswordSubmit}>\n            <div className=\"mb-3\">\n              <label htmlFor=\"resetEmail\" className=\"form-label\">\n                Enter your email address to reset your password\n              </label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"resetEmail\"\n                name=\"resetEmail\"\n                aria-describedby=\"resetEmailHelp\"\n                value={resetPasswordEmail}\n                onChange={onResetEmailChange}\n                required\n              />\n              <div id=\"resetEmailHelp\" className=\"form-text\">\n                We'll send a password reset link to this email address.\n              </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Reset Password\n            </button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}