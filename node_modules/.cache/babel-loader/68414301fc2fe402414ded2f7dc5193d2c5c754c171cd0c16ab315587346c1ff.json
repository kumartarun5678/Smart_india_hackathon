{"ast":null,"code":"// import React, { useContext, useEffect, useRef, useState } from 'react'\n// import noteContext from \"../context/notes/noteContext.js\"\n// import Noteitem from './Noteitem.js';\n// import AddNote from './AddNote.js';\n// import { useNavigate } from 'react-router-dom';\n\n// const Notes = (props) => {\n//     const context = useContext(noteContext);\n//     const { notes, getNotes, editNote } = context;\n//     let navigate = useNavigate();\n//     useEffect(() => {\n//         if(localStorage.getItem('token')){\n//             getNotes()\n//         }\n//         else{\n//             navigate('/login')\n//         }\n//         // eslint-disable-next-line\n//     }, [])\n//     const ref = useRef(null)\n//     const refClose = useRef(null)\n//     const [note, setNote] = useState({id: \"\", etitle: \"\", edescription: \"\", etag: \"\"})\n\n//     const updateNote = (currentNote) => {\n//         ref.current.click();\n//         setNote({id: currentNote._id, etitle: currentNote.title, edescription: currentNote.description, etag:currentNote.tag})\n\n//     }\n\n//     const handleClick = (e)=>{ \n//         editNote(note.id, note.etitle, note.edescription, note.etag)\n//         refClose.current.click();\n//         // props.showAlert(\"Update successfully\",\"success\")\n//     }\n\n//     const onChange = (e)=>{\n//         setNote({...note, [e.target.name]: e.target.value})\n//     }\n\n//     return (\n//         <>\n//             <AddNote showAlert={props.showAlert}/>\n//             <button ref={ref} type=\"button\" className=\"btn btn-primary d-none\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n//                 Launch demo modal\n//             </button>\n//             <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//                 <div className=\"modal-dialog\">\n//                     <div className=\"modal-content\">\n//                         <div className=\"modal-header\">\n//                             <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Note</h5>\n//                             <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n//                         </div>\n//                         <div className=\"modal-body\">\n//                             <form className=\"my-3\">\n//                                 <div className=\"mb-3\">\n//                                     <label htmlFor=\"title\" className=\"form-label\">Bus Name</label>\n//                                     <input type=\"text\" className=\"form-control\" id=\"etitle\" name=\"etitle\" value={note.etitle} aria-describedby=\"emailHelp\" onChange={onChange}  required/>\n//                                 </div>\n//                                 <div className=\"mb-3\">\n//                                     <label htmlFor=\"description\" className=\"form-label\">Bus Number</label>\n//                                     <input type=\"text\" className=\"form-control\" id=\"edescription\" name=\"edescription\" value={note.edescription} onChange={onChange} minLength={5} required/>\n//                                 </div>\n//                                 <div className=\"mb-3\">\n//                                     <label htmlFor=\"tag\" className=\"form-label\">cng/eletric</label>\n//                                     <input type=\"text\" className=\"form-control\" id=\"etag\" name=\"etag\" value={note.etag} onChange={onChange} />\n//                                 </div>\n\n//                             </form>\n//                         </div>\n//                         <div className=\"modal-footer\">\n//                             <button ref={refClose} type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n//                             <button disabled={note.etitle.length<5 || note.edescription.length<5} onClick={handleClick} type=\"button\" className=\"btn btn-primary\">Update Bus Details</button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n\n//             <div className=\"row my-3\">\n//                 <h2>You Buses</h2>\n//                 <div className=\"container mx-2\"> \n//                 {notes.length===0 && 'No notes to display'}\n//                 </div>\n//                 {notes.map((note) => {\n//                     return <Noteitem key={note._id} updateNote={updateNote} note={note}  />\n//                 })}\n//             </div>\n//         </>\n//     )\n// }\n\n// export default Notes","map":{"version":3,"names":[],"sources":["/Users/tarunkumar/Documents/iNoteBOOK/src/components/Notes.js"],"sourcesContent":["// import React, { useContext, useEffect, useRef, useState } from 'react'\n// import noteContext from \"../context/notes/noteContext.js\"\n// import Noteitem from './Noteitem.js';\n// import AddNote from './AddNote.js';\n// import { useNavigate } from 'react-router-dom';\n\n\n\n// const Notes = (props) => {\n//     const context = useContext(noteContext);\n//     const { notes, getNotes, editNote } = context;\n//     let navigate = useNavigate();\n//     useEffect(() => {\n//         if(localStorage.getItem('token')){\n//             getNotes()\n//         }\n//         else{\n//             navigate('/login')\n//         }\n//         // eslint-disable-next-line\n//     }, [])\n//     const ref = useRef(null)\n//     const refClose = useRef(null)\n//     const [note, setNote] = useState({id: \"\", etitle: \"\", edescription: \"\", etag: \"\"})\n\n//     const updateNote = (currentNote) => {\n//         ref.current.click();\n//         setNote({id: currentNote._id, etitle: currentNote.title, edescription: currentNote.description, etag:currentNote.tag})\n        \n//     }\n\n//     const handleClick = (e)=>{ \n//         editNote(note.id, note.etitle, note.edescription, note.etag)\n//         refClose.current.click();\n//         // props.showAlert(\"Update successfully\",\"success\")\n//     }\n\n//     const onChange = (e)=>{\n//         setNote({...note, [e.target.name]: e.target.value})\n//     }\n\n//     return (\n//         <>\n//             <AddNote showAlert={props.showAlert}/>\n//             <button ref={ref} type=\"button\" className=\"btn btn-primary d-none\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n//                 Launch demo modal\n//             </button>\n//             <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//                 <div className=\"modal-dialog\">\n//                     <div className=\"modal-content\">\n//                         <div className=\"modal-header\">\n//                             <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Note</h5>\n//                             <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n//                         </div>\n//                         <div className=\"modal-body\">\n//                             <form className=\"my-3\">\n//                                 <div className=\"mb-3\">\n//                                     <label htmlFor=\"title\" className=\"form-label\">Bus Name</label>\n//                                     <input type=\"text\" className=\"form-control\" id=\"etitle\" name=\"etitle\" value={note.etitle} aria-describedby=\"emailHelp\" onChange={onChange}  required/>\n//                                 </div>\n//                                 <div className=\"mb-3\">\n//                                     <label htmlFor=\"description\" className=\"form-label\">Bus Number</label>\n//                                     <input type=\"text\" className=\"form-control\" id=\"edescription\" name=\"edescription\" value={note.edescription} onChange={onChange} minLength={5} required/>\n//                                 </div>\n//                                 <div className=\"mb-3\">\n//                                     <label htmlFor=\"tag\" className=\"form-label\">cng/eletric</label>\n//                                     <input type=\"text\" className=\"form-control\" id=\"etag\" name=\"etag\" value={note.etag} onChange={onChange} />\n//                                 </div>\n \n//                             </form>\n//                         </div>\n//                         <div className=\"modal-footer\">\n//                             <button ref={refClose} type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n//                             <button disabled={note.etitle.length<5 || note.edescription.length<5} onClick={handleClick} type=\"button\" className=\"btn btn-primary\">Update Bus Details</button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n\n//             <div className=\"row my-3\">\n//                 <h2>You Buses</h2>\n//                 <div className=\"container mx-2\"> \n//                 {notes.length===0 && 'No notes to display'}\n//                 </div>\n//                 {notes.map((note) => {\n//                     return <Noteitem key={note._id} updateNote={updateNote} note={note}  />\n//                 })}\n//             </div>\n//         </>\n//     )\n// }\n\n// export default Notes"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}